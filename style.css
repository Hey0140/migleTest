@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Noto Sans KR', sans-serif;
  background-color: black;
  color: #00ff00;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
}

/* LAYER SYSTEM: Clearly defined z-index hierarchy */
#matrix-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1; /* Lower than content */
  pointer-events: none; /* Don't interfere with clicks */
}

#matrix-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1; /* Ensure this is lower than content but visible */
  opacity: 1;
  transition: opacity 2s ease;
}

#matrix-background.fade-out {
  opacity: 0.2; /* Increased from 0.1 to keep it subtly visible */
}

/* Camera container on layer 2 */
#camera-container {
  position: fixed; /* Changed to fixed to be part of layer system */
  z-index: 20; /* Above matrix, below content when activated */
  width: 85%; /* Reduced from 100% to make it 15% smaller */
  max-width: 680px; /* Reduced from 800px */
  max-height: 90vh; /* 뷰포트 높이의 90%로 제한 */
  display: flex;
  flex-direction: column;
  align-items: center;
}

#camera-wrapper {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 75%; /* 4:3 aspect ratio */
  overflow: hidden;
  max-height: 80vh; /* 뷰포트 높이의 80%로 제한 */
  z-index: 11;
}

#camera {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transform: scaleX(-1); /* Mirror effect */
  opacity: 0;
  transition: opacity 1s ease-in;
  z-index: 15; /* Lower than guide elements */
  -webkit-mask-image: radial-gradient(
    ellipse 40% 60% at center,
    /* Adjust aspect ratio to be taller than wide */ black 0%,
    black 20%,
    transparent 45%
  );
  mask-image: radial-gradient(
    ellipse 40% 60% at center,
    /* Adjust aspect ratio to be taller than wide */ black 0%,
    black 20%,
    transparent 45%
  );
}

#camera.active {
  opacity: 1;
}

/* Remove or modify the circle-mask to be fully transparent outside */
#circle-mask {
  display: none; /* Hide this element as we're using the CSS masking */
}

#guide-circle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 140px; /* Make narrower */
  height: 200px; /* Keep height the same */
  border: 3px dashed white;
  border-radius: 50%;
  pointer-events: none;
  z-index: 30; /* Increased to ensure it's on top */
}

#guide-text {
  position: absolute;
  bottom: 30%; /* Moved up from 20% */
  left: 50%;
  transform: translateX(-50%);
  color: white;
  font-size: 28px; /* Increased from 24px */
  text-align: center;
  font-weight: bold;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 10px 20px;
  border-radius: 5px;
  white-space: nowrap;
  z-index: 30; /* Increased to ensure it's on top */
}

#status-message {
  position: relative; /* Add position relative */
  z-index: 20; /* Higher z-index so it appears above matrix */
  margin-top: 20px;
  font-size: 24px;
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}

#status-message.active {
  opacity: 1;
}

/* Content container on layer 3 */
.content-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  display: flex;
  justify-content: center;
  align-items: center; /* This ensures vertical centering */
  pointer-events: none;
}

/* Content wrapper with explicit vertical centering */
#content-wrapper {
  position: absolute;
  width: 100%;
  height: 100%;
  max-width: 1200px;
  display: flex;
  flex-direction: column;
  justify-content: center; /* Critical for vertical centering */
  align-items: center;
  z-index: 20;

  /* Ensure it takes up the full height */
  top: 0;
  bottom: 0;
  margin: auto 0; /* Important for vertical centering */

  /* Debug outline */
  /* border: 1px solid red; */
}

/* Background */
#background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #000;
  opacity: 1;
  z-index: 0;
  transition: opacity 2s ease;
}

#background.fadeout {
  opacity: 0.3;
}

/* Content sections with proper positioning */
.content-section {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto; /* Critical for vertical and horizontal centering */

  width: 100%;
  height: 100%;

  /* Center contents vertically */
  display: none;
  flex-direction: column;
  justify-content: center; /* Critical for vertical centering */
  align-items: center;

  /* Other properties */
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  z-index: -10;
}

/* Active section */
.content-section.active {
  display: flex !important;
  opacity: 1 !important;
  visibility: visible !important;
  z-index: 30 !important;
  pointer-events: all !important;
}

/* Typing Text Section - centered */
#typing-text {
  display: none;
  text-align: center;
  width: 100%;
  max-height: 300px; /* Limit maximum height */
  margin: auto; /* Center vertically and horizontally */
  padding: 20px;
  font-size: 2rem;
  color: #00ff00;
  text-shadow: 0 0 5px rgba(0, 255, 0, 0.7);
  /* Center the content */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  height: 100%;
  padding: 0;
  margin: 0;
}

/* Details Text Section - needs special handling for alignment */
#details-text {
  display: none;
  text-align: left;
  width: 80%;
  max-width: 600px;
  max-height: 70vh;
  margin: auto; /* For vertical centering */
  align-self: center;
  padding: 20px;
  font-family: monospace;
  text-align: left;
  width: 80%;
  max-width: 600px;
  margin: 0 auto; /* Horizontal centering */

  /* Center the actual content rather than the container */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start; /* Left align text but center the container */
  min-height: 100%; /* Use full height */
}

#details-text p {
  opacity: 0;
  margin-bottom: 0.8rem;
  transform: translateY(10px);
  transition:
    opacity 0.5s ease,
    transform 0.5s ease;
}

#details-text p.visible {
  opacity: 1;
  transform: translateY(0);
}

#survival-time {
  display: inline-block;
}

/* Scenario Section - ensure content is centered */
#scenario-section {
  text-align: center;
  padding: 0;
  /* Center the content vertically and horizontally */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
}

#scenario-text {
  margin-bottom: 1.5rem;
  font-size: 1.2rem;
}

#video-container {
  display: flex;
  justify-content: space-between;
  gap: 20px;
  width: 80%;
  max-width: 800px;
}

.video-preview {
  width: 30%;
  overflow: hidden;
  border: 1px solid #00ff00;
}

.video-preview video {
  width: 100%;
  height: auto;
}

/* Overlay Section - ensure content is centered */
#overlay {
  background-color: rgba(0, 0, 0, 0.85);
  z-index: 20;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 0;
  height: 100%;
}

#question-text {
  font-size: 1.5rem;
  margin-bottom: 2rem;
  line-height: 1.5;
}

#play-button {
  padding: 10px 30px;
  font-size: 1.2rem;
  background-color: transparent;
  color: #00ff00;
  border: 2px solid #00ff00;
  cursor: pointer;
  transition: all 0.3s ease;
}

#play-button:hover:not([disabled]) {
  background-color: rgba(0, 255, 0, 0.2);
}

#play-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Final Message Section - centered */
#final-message {
  background-color: rgba(0, 0, 0, 0.95);
  font-size: 1.5rem;
  z-index: 30;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 0;
  height: 100%;
}

/* Animation Elements */
.typing-cursor {
  display: inline-block;
  width: 3px;
  height: 1.2em;
  background-color: #00ff00;
  margin-left: 2px;
  animation: blink 1s infinite;
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

/* Debug overlay - always on top */
#debug-overlay {
  position: fixed;
  top: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 5px;
  font-size: 12px;
  z-index: 9999;
}
